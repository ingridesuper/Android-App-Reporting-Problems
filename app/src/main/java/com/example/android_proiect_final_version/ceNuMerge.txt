-> cand editez o problema din pagina de user, cand revin nu mi se reface automat listview-ul
ci se reface cand dau restart. am folosit launchere si tot ce e necesar cred, ce e gresit?
-> plus aceeasi problema pt lv din home page
-> la fel si cu nr probleme raportate
-> deocamdata am rezolvat cu on resume dar nu e ok asa, ca se reface oricum, fie ca am editat sau nu

-> pune si la probl raportate din profil linear layout

-> la view alti utilizatori xml, ar tb ca daca un buton e visible, listview sa fie constraied in functie de el, si daca celalat e, in functie de el
desi poate nu e nevoie, daca am folosit linear layout, poate se pun automat una sub alta

package com.example.android_proiect_final_version;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.widget.ListView;
import android.widget.TextView;

import androidx.activity.EdgeToEdge;
import androidx.activity.result.ActivityResultLauncher;
import androidx.activity.result.contract.ActivityResultContracts;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.TooltipCompat;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.example.android_proiect_final_version.CustomAdapters.AdapterProblema;
import com.example.android_proiect_final_version.database.AplicatieDB;
import com.example.android_proiect_final_version.models.Problema;
import com.example.android_proiect_final_version.models.Utilizator;
import com.google.android.material.floatingactionbutton.FloatingActionButton;

import java.util.ArrayList;
import java.util.List;

public class ViewProfilActivity extends AppCompatActivity {
    Utilizator utilizator;
    List<Problema> probleme=new ArrayList<>();
    AdapterProblema adapterProblema;
    ActivityResultLauncher<Intent> launcherEditProfil;
    ActivityResultLauncher<Intent> launcherEditProblema;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_view_profil);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });

        ListView lvProbleme=findViewById(R.id.lvProbleme);
        TextView tvUsername=findViewById(R.id.tvUsername);
        TextView tvNumePrenumeSector=findViewById(R.id.tvNumePrenumeSector);
        TextView tvSubtitlu=findViewById(R.id.tvSubtitlu);
        TextView tvNrProblemeRaportate=findViewById(R.id.tvNrProblemeRaportate);
        FloatingActionButton fabEditProfile=findViewById(R.id.fabEditProfile);
        TooltipCompat.setTooltipText(fabEditProfile, "Editeaza-ti profilul!");

        SharedPreferences sp=getSharedPreferences("utilizatorCurent", MODE_PRIVATE);
        String username=sp.getString("username", "none");
        utilizator= AplicatieDB.getInstance(getApplicationContext()).getUtilizatorDAO().getUtilizatorWithUsername(username);

        probleme=AplicatieDB.getInstance(getApplicationContext()).getProblemaDAO().getProblemeOfAutor(username);
        adapterProblema=new AdapterProblema(getApplicationContext(), R.layout.view_problema, probleme, getLayoutInflater());
        lvProbleme.setAdapter(adapterProblema);

        tvUsername.setText(username);
        tvNumePrenumeSector.setText(utilizator.getNume()+" "+utilizator.getPrenume()+", rezident in "+utilizator.getSector());
        int nrProblemeRaportate=AplicatieDB.getInstance(getApplicationContext()).getUtilizatorDAO().getNrProblemeRaportateDeUtilizator(username);
        tvNrProblemeRaportate.setText("Numar probleme raportate: "+nrProblemeRaportate);

        if(nrProblemeRaportate==0){
            tvSubtitlu.setVisibility(View.GONE);
        }

        launcherEditProfil=registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), result->{
            if(result.getResultCode()==RESULT_OK){
                utilizator=AplicatieDB.getInstance(getApplicationContext()).getUtilizatorDAO().getUtilizatorWithUsername(username);
                tvNumePrenumeSector.setText(utilizator.getNume()+" "+utilizator.getPrenume()+", rezident in "+utilizator.getSector());
            }
        });

        fabEditProfile.setOnClickListener(view -> {
            Intent intent=new Intent(getApplicationContext(), EditProfilActivity.class);
            launcherEditProfil.launch(intent);
        });

        launcherEditProblema=registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), result->{
            if (result.getResultCode()==RESULT_OK){
                probleme.clear();
                probleme.addAll(AplicatieDB.getInstance(getApplicationContext()).getProblemaDAO().getAllProbleme());
                adapterProblema.notifyDataSetChanged();
            }
        });

        lvProbleme.setOnItemClickListener(((adapterView, view, i, l) -> {
            Intent intent=new Intent(getApplicationContext(), ViewProblemaActivity.class);
            intent.putExtra("isEditing", true);
            intent.putExtra("problema", probleme.get(i));
            launcherEditProblema.launch(intent);
        }));
    }
}

package com.example.android_proiect_final_version;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import androidx.activity.EdgeToEdge;
import androidx.activity.result.ActivityResultLauncher;
import androidx.activity.result.contract.ActivityResultContracts;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.example.android_proiect_final_version.database.AplicatieDB;
import com.example.android_proiect_final_version.models.Problema;
import com.example.android_proiect_final_version.models.Semnatura;

import org.w3c.dom.Text;

import java.util.List;

public class ViewProblemaActivity extends AppCompatActivity {
    Problema problema;
    ActivityResultLauncher<Intent> launcherEditProblema;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_view_problema);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });

        TextView tvTitlu=findViewById(R.id.tvTitlu);
        TextView tvDescriere=findViewById(R.id.tvDescriere);
        TextView tvAdresaSector=findViewById(R.id.tvAdresaSector);
        TextView tvCategorie=findViewById(R.id.tvCategorie);
        TextView tvAutor=findViewById(R.id.tvAutor);
        TextView tvNrSemnaturi=findViewById(R.id.tvNrSemnaturi);
        Button btnSemneaza=findViewById(R.id.btnSemneaza);
        Button btnRetrageSemnatura=findViewById(R.id.btnRetrageSemnatura);
        Button btnEditeazaProblema=findViewById(R.id.btnEditeazaProblema);

        Intent intent=getIntent();
        problema=(Problema) intent.getSerializableExtra("problema");

        tvTitlu.setText(problema.getTitlu());
        tvDescriere.setText(problema.getDescriere());
        tvAdresaSector.setText(problema.getSector().toString()+" - "+problema.getAdresa());
        tvCategorie.setText(problema.getCategorieProblema().toString());
        tvAutor.setText("Autor: "+problema.getAutorUsername());
        List<Semnatura> semnaturi= AplicatieDB.getInstance(getApplicationContext()).getSemnaturaDAO().getSemnaturiForProblema(problema.getId());
        int nrSemnaturi=semnaturi.size();
        tvNrSemnaturi.setText("Număr semnături: "+String.valueOf(nrSemnaturi));


        SharedPreferences sp=getSharedPreferences("utilizatorCurent", MODE_PRIVATE);
        String username=sp.getString("username", "none");
        if(intent.hasExtra("isEditing")){
            btnEditeazaProblema.setVisibility(View.VISIBLE);
            btnRetrageSemnatura.setVisibility(View.GONE);
            btnSemneaza.setVisibility(View.GONE);
        }
        else {
            boolean hasSigned=false;

            if(AplicatieDB.getInstance(getApplicationContext()).getSemnaturaDAO().utilizatorulASemnatProblema(problema.getId(), username)==1){
                hasSigned=true;
            }
            if(!hasSigned){
                btnSemneaza.setVisibility(View.VISIBLE);
                btnRetrageSemnatura.setVisibility(View.GONE);
            }
            else {
                btnSemneaza.setVisibility(View.GONE);
                btnRetrageSemnatura.setVisibility(View.VISIBLE);
            }
        }

        btnSemneaza.setOnClickListener(view -> {
            btnSemneaza.setVisibility(View.GONE);
            btnRetrageSemnatura.setVisibility(View.VISIBLE);
            AplicatieDB.getInstance(getApplicationContext()).getSemnaturaDAO().insertSemnatura(new Semnatura(username, problema.getId()));
            updateNrSemnaturi(tvNrSemnaturi);
        });

        btnRetrageSemnatura.setOnClickListener(view -> {
            btnSemneaza.setVisibility(View.VISIBLE);
            btnRetrageSemnatura.setVisibility(View.GONE);
            AplicatieDB.getInstance(getApplicationContext()).getSemnaturaDAO().deleteSemnaturaByUsernameAndProblemId(username, problema.getId());
            updateNrSemnaturi(tvNrSemnaturi);
        });

        launcherEditProblema=registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), result->{
            if(result.getResultCode()==RESULT_OK){
                finish();
            }
        });

        btnEditeazaProblema.setOnClickListener(view -> {
            Intent intentNou=new Intent(getApplicationContext(), AddProblemActivity.class);
            intentNou.putExtra("problemaDeEditat",problema);
            launcherEditProblema.launch(intentNou);
        });
    }

    private void updateNrSemnaturi(TextView tvNrSemnaturi) {
        int nrSemnaturi = AplicatieDB.getInstance(getApplicationContext()).getSemnaturaDAO().getSemnaturiForProblema(problema.getId()).size();
        tvNrSemnaturi.setText("Număr semnături: " + nrSemnaturi);
    }
}

package com.example.android_proiect_final_version;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.example.android_proiect_final_version.database.AplicatieDB;
import com.example.android_proiect_final_version.enums.CategorieProblema;
import com.example.android_proiect_final_version.enums.Sector;
import com.example.android_proiect_final_version.models.Problema;

public class AddProblemActivity extends AppCompatActivity {
    ArrayAdapter<CharSequence> adapterSector;
    ArrayAdapter<CharSequence> adapterCategorie;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_add_problem);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });

        EditText etTitlu=findViewById(R.id.etTitlu);
        EditText etDescriere=findViewById(R.id.etDescriere);
        EditText etAdresa=findViewById(R.id.etAdresa);
        Spinner spnSector=findViewById(R.id.spnSector);
        Spinner spnCategorie=findViewById(R.id.spnCategorie);
        Button btnSave=findViewById(R.id.btnSave);

        SharedPreferences sp=getSharedPreferences("utilizatorCurent", MODE_PRIVATE);
        String currentUser=sp.getString("username", "nu exista");
        Log.i("currentUser", currentUser);

        adapterSector=ArrayAdapter.createFromResource(getApplicationContext(), R.array.sectoare, androidx.appcompat.R.layout.support_simple_spinner_dropdown_item);
        spnSector.setAdapter(adapterSector);
        adapterCategorie=ArrayAdapter.createFromResource(getApplicationContext(), R.array.categoriiProbleme, androidx.appcompat.R.layout.support_simple_spinner_dropdown_item);
        spnCategorie.setAdapter(adapterCategorie);

        Intent intentOne=getIntent();
        if (intentOne.hasExtra("problemaDeEditat")) {
            Problema problemaDeEditat=(Problema) intentOne.getSerializableExtra("problemaDeEditat");
            etTitlu.setText(problemaDeEditat.getTitlu());
            etDescriere.setText(problemaDeEditat.getDescriere());
            etAdresa.setText(problemaDeEditat.getAdresa());
            String sectorString=problemaDeEditat.getSector().toString();
            int poz=adapterSector.getPosition(sectorString);
            spnSector.setSelection(poz);

            String categorieString=problemaDeEditat.getCategorieProblema().toString();
            int poz2=adapterCategorie.getPosition(categorieString);
            spnCategorie.setSelection(poz2);
        }

        btnSave.setOnClickListener(view -> {
            String titlu=etTitlu.getText().toString();
            String adresa=etAdresa.getText().toString();
            String descriere=etDescriere.getText().toString();
            Sector sector=Sector.valueOf(spnSector.getSelectedItem().toString());
            CategorieProblema categorie=CategorieProblema.valueOf(spnCategorie.getSelectedItem().toString());
            Intent intent=getIntent();
            if(intent.hasExtra("problemaDeEditat")){
                Problema problemaVeche=(Problema) intent.getSerializableExtra("problemaDeEditat");
                problemaVeche.setTitlu(titlu);
                problemaVeche.setAdresa(adresa);
                problemaVeche.setDescriere(descriere);
                problemaVeche.setSector(sector);
                problemaVeche.setCategorieProblema(categorie);
                AplicatieDB.getInstance(getApplicationContext()).getProblemaDAO().updateProblema(problemaVeche);
            }
            else {
                AplicatieDB.getInstance(getApplicationContext()).getProblemaDAO().insertProblema(new Problema(titlu, descriere, currentUser, sector, adresa, categorie));
            }
            setResult(RESULT_OK, intent);
            finish();
        });
    }
}